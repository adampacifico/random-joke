{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","joke","setJoke","loading","setLoading","getJoke","a","axios","get","then","res","data","console","log","useEffect","style","height","className","setup","punchline","animation","variant","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAyDeA,MAnDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KASPC,EAAO,uCAAG,sBAAAC,EAAA,6DACdF,GAAW,GADG,kBAGOG,IAChBC,IAAI,qDAAqDC,MACxD,SAAAC,GACER,EAAQQ,EAAIC,SANN,cASZP,GAAW,GATC,gDAWZQ,QAAQC,IAAR,MAXY,yDAAH,qDAmBb,OAJAC,qBAAU,WACRT,MACC,IAGD,sBAAKU,MAAO,CAAEC,OAAQ,SACpBC,UAAU,+EADZ,UAMId,EACA,qCACE,6BAAKF,EAAKiB,QACV,qBAAID,UAAU,OAAd,iBAA0BhB,EAAKkB,gBAGjC,cAAC,IAAD,CAAwBC,UAAU,OAAOC,QAAQ,YAEnD,wBAAQJ,UAAU,uBAAuBK,QAASjB,EAAlD,+BCrCSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab857616.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as ReactBootstrap from 'react-bootstrap';\n\n\nfunction App() {\n  const [joke, setJoke] = useState([]);\n  const [loading, setLoading] = useState(false);\n  \n  // const getJoke = () => {\n  //   Axios.get('https://official-joke-api.appspot.com/random_joke').then((response) => {\n  //     setJoke(response.data)\n  //   })\n  // }\n  const getJoke = async () => {\n    setLoading(false);\n    try {\n      const data = await axios\n        .get('https://official-joke-api.appspot.com/random_joke').then(\n          res => {\n            setJoke(res.data)\n          }\n        );\n      setLoading(true);\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    getJoke();\n  }, []);\n\n  return (\n    <div style={{ height: \"100vh\" }}\n      className=\"container-fluid\n     d-flex flex-column justify-content-center\n      align-items-center\">\n\n\n      { loading ?\n        <>\n          <h1>{joke.setup}</h1>\n          <h4 className=\"my-4\"> -- {joke.punchline}</h4>\n\n        </> :\n        <ReactBootstrap.Spinner animation=\"grow\" variant=\"warning\" />\n      }\n      <button className=\"btn btn-primary my-2\" onClick={getJoke}>Generate Joke</button>\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}